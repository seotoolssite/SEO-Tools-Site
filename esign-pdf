<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>eSign PDF - Secure Digital Signatures</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf-lib/1.17.1/pdf-lib.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/signature_pad/4.0.6/signature_pad.min.js"></script>
    <style>
        :root {
            --primary-gradient: linear-gradient(90deg, #6A5ACD, #7B68EE);
            --accent-color: #4A90E2;
            --background-color: #F9FAFB;
            --primary-text: #333333;
            --secondary-text: #666666;
            --border-color: #E5E7EB;
            --card-shadow: 0px 4px 10px rgba(0, 0, 0, 0.05);
            --hover-shadow: 0px 6px 15px rgba(0, 0, 0, 0.08);
            --border-radius: 12px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--background-color);
            color: var(--primary-text);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Header Styles */
        header {
            background: var(--primary-gradient);
            color: white;
            padding: 20px 0;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo h1 {
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 5px;
        }

        .logo p {
            font-size: 14px;
            opacity: 0.9;
        }

        .back-btn {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .back-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Main Content */
        main {
            padding: 40px 0;
        }

        .card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            padding: 30px;
            margin-bottom: 30px;
            transition: all 0.3s ease;
        }

        .card:hover {
            box-shadow: var(--hover-shadow);
        }

        /* Upload Area */
        .upload-area {
            text-align: center;
            border: 2px dashed var(--border-color);
            padding: 60px 20px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .upload-area:hover {
            border-color: var(--accent-color);
        }

        .upload-area i {
            font-size: 48px;
            color: var(--accent-color);
            margin-bottom: 20px;
        }

        .upload-area h2 {
            font-size: 22px;
            margin-bottom: 10px;
        }

        .upload-area p {
            color: var(--secondary-text);
            margin-bottom: 20px;
        }

        .upload-btn {
            background: var(--accent-color);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: var(--border-radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .upload-btn:hover {
            background: #3a7bc8;
            transform: translateY(-2px);
        }

        /* Preview Area */
        .preview-container {
            display: none;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }

        .pdf-preview {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            padding: 20px;
            height: 600px;
            overflow-y: auto;
            position: relative;
        }

        .pdf-preview canvas {
            width: 100%;
            border: 1px solid var(--border-color);
            border-radius: 8px;
        }

        .signature-panel {
            display: flex;
            flex-direction: column;
            gap: 20px;
        }

        .signature-tabs {
            display: flex;
            border-bottom: 1px solid var(--border-color);
            margin-bottom: 20px;
        }

        .tab {
            padding: 12px 20px;
            cursor: pointer;
            font-weight: 500;
            border-bottom: 2px solid transparent;
            transition: all 0.3s ease;
        }

        .tab.active {
            color: var(--accent-color);
            border-bottom: 2px solid var(--accent-color);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .signature-canvas {
            border: 1px solid var(--border-color);
            border-radius: 8px;
            background: white;
            width: 100%;
            height: 200px;
            cursor: crosshair;
        }

        .canvas-controls {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        .btn {
            padding: 8px 16px;
            border-radius: 6px;
            border: none;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: var(--accent-color);
            color: white;
        }

        .btn-secondary {
            background: #f0f0f0;
            color: var(--primary-text);
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .type-signature input {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            margin-bottom: 15px;
            font-size: 16px;
        }

        .font-selector {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 15px;
        }

        .font-option {
            padding: 10px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            text-align: center;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .font-option:hover {
            border-color: var(--accent-color);
        }

        .font-option.selected {
            border-color: var(--accent-color);
            background: rgba(74, 144, 226, 0.1);
        }

        .upload-signature input {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            margin-bottom: 15px;
        }

        .signature-controls {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }

        .color-picker {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .color-picker input {
            width: 40px;
            height: 40px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
        }

        .size-control {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .size-control input {
            width: 80px;
            padding: 8px;
            border: 1px solid var(--border-color);
            border-radius: 6px;
        }

        .signer-details {
            margin-top: 20px;
            padding-top: 20px;
            border-top: 1px solid var(--border-color);
        }

        .signer-details h3 {
            margin-bottom: 15px;
            font-size: 18px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 15px;
        }

        .checkbox-group input {
            width: 18px;
            height: 18px;
        }

        .apply-signature {
            margin-top: 20px;
            text-align: center;
        }

        .apply-btn {
            background: var(--primary-text);
            color: white;
            border: none;
            padding: 14px 30px;
            border-radius: var(--border-radius);
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            width: 100%;
        }

        .apply-btn:hover {
            background: var(--accent-color);
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

        /* Action Area */
        .action-area {
            display: none;
            text-align: center;
            padding: 30px;
        }

        .action-area h2 {
            margin-bottom: 20px;
            color: #2ecc71;
        }

        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
        }

        .download-btn {
            background: var(--accent-color);
            color: white;
            border: none;
            padding: 14px 30px;
            border-radius: var(--border-radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .start-over-btn {
            background: #f0f0f0;
            color: var(--primary-text);
            border: none;
            padding: 14px 30px;
            border-radius: var(--border-radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .download-btn:hover, .start-over-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Loading Spinner */
        .loading {
            display: none;
            text-align: center;
            padding: 30px;
        }

        .spinner {
            border: 4px solid rgba(0, 0, 0, 0.1);
            border-left-color: var(--accent-color);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        /* Responsive Design */
        @media (max-width: 992px) {
            .preview-container {
                grid-template-columns: 1fr;
            }
            
            .pdf-preview {
                height: 400px;
            }
        }

        @media (max-width: 576px) {
            .header-content {
                flex-direction: column;
                gap: 15px;
                text-align: center;
            }
            
            .action-buttons {
                flex-direction: column;
            }
            
            .signature-controls {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <h1>eSign PDF</h1>
                    <p>Upload, Sign, and Download Securely — Free Online eSignature Tool</p>
                </div>
                <button class="back-btn">
                    <i class="fas fa-arrow-left"></i> Back to Main Page
                </button>
            </div>
        </div>
    </header>

    <main class="container">
        <!-- Upload Area -->
        <div class="card upload-area" id="uploadArea">
            <i class="fas fa-cloud-upload-alt"></i>
            <h2>Drop your PDF here or click to browse</h2>
            <p>Supports PDF files up to 25MB</p>
            <button class="upload-btn">Choose PDF Files</button>
            <input type="file" id="fileInput" accept=".pdf" style="display: none;">
        </div>

        <!-- Preview & Signature Area -->
        <div class="preview-container" id="previewContainer">
            <div class="pdf-preview">
                <canvas id="pdfCanvas"></canvas>
            </div>
            <div class="signature-panel">
                <div class="signature-tabs">
                    <div class="tab active" data-tab="draw">Draw Signature</div>
                    <div class="tab" data-tab="type">Type Signature</div>
                    <div class="tab" data-tab="upload">Upload Signature</div>
                </div>

                <div class="tab-content active" id="draw-tab">
                    <canvas class="signature-canvas" id="signatureCanvas"></canvas>
                    <div class="canvas-controls">
                        <button class="btn btn-secondary" id="clearCanvas">Clear</button>
                        <button class="btn btn-primary" id="saveSignature">Save Signature</button>
                    </div>
                </div>

                <div class="tab-content" id="type-tab">
                    <div class="type-signature">
                        <input type="text" id="typedSignature" placeholder="Enter your name">
                        <div class="font-selector">
                            <div class="font-option selected" data-font="Dancing Script">Dancing Script</div>
                            <div class="font-option" data-font="Great Vibes">Great Vibes</div>
                            <div class="font-option" data-font="Parisienne">Parisienne</div>
                            <div class="font-option" data-font="Sacramento">Sacramento</div>
                        </div>
                        <button class="btn btn-primary" id="saveTypedSignature">Save Signature</button>
                    </div>
                </div>

                <div class="tab-content" id="upload-tab">
                    <div class="upload-signature">
                        <input type="file" id="uploadSignature" accept=".png,.jpg,.jpeg">
                        <p style="font-size: 14px; color: var(--secondary-text); margin-top: 10px;">
                            Upload a PNG or JPG image with transparent background for best results
                        </p>
                        <button class="btn btn-primary" id="saveUploadedSignature">Save Signature</button>
                    </div>
                </div>

                <div class="signature-controls">
                    <div class="color-picker">
                        <label>Color:</label>
                        <input type="color" id="signatureColor" value="#000000">
                    </div>
                    <div class="size-control">
                        <label>Size:</label>
                        <input type="number" id="signatureSize" value="100" min="50" max="200">
                    </div>
                </div>

                <div class="signer-details">
                    <h3>Signer Details (Optional)</h3>
                    <div class="form-group">
                        <label for="signerName">Full Name</label>
                        <input type="text" id="signerName" placeholder="Enter your full name">
                    </div>
                    <div class="form-group">
                        <label for="signerEmail">Email Address</label>
                        <input type="email" id="signerEmail" placeholder="Enter your email">
                    </div>
                    <div class="form-group">
                        <label for="signingDate">Date of Signing</label>
                        <input type="text" id="signingDate" readonly>
                    </div>
                    <div class="checkbox-group">
                        <input type="checkbox" id="addToAllPages">
                        <label for="addToAllPages">Add signature to all pages</label>
                    </div>
                </div>

                <div class="apply-signature">
                    <button class="apply-btn" id="applySignature">
                        <i class="fas fa-pen"></i> Apply Signature
                    </button>
                </div>
            </div>
        </div>

        <!-- Loading Spinner -->
        <div class="loading" id="loadingSpinner">
            <div class="spinner"></div>
            <p>Processing your document...</p>
        </div>

        <!-- Action Area -->
        <div class="action-area" id="actionArea">
            <h2>Signature applied successfully!</h2>
            <div class="action-buttons">
                <button class="download-btn" id="downloadPdf">
                    <i class="fas fa-download"></i> Download Signed PDF
                </button>
                <button class="start-over-btn" id="startOver">
                    <i class="fas fa-redo"></i> Start Over
                </button>
            </div>
        </div>
    </main>

    <script>
        // DOM Elements
        const uploadArea = document.getElementById('uploadArea');
        const fileInput = document.getElementById('fileInput');
        const previewContainer = document.getElementById('previewContainer');
        const pdfCanvas = document.getElementById('pdfCanvas');
        const signatureCanvas = document.getElementById('signatureCanvas');
        const clearCanvas = document.getElementById('clearCanvas');
        const saveSignature = document.getElementById('saveSignature');
        const typedSignature = document.getElementById('typedSignature');
        const fontOptions = document.querySelectorAll('.font-option');
        const saveTypedSignature = document.getElementById('saveTypedSignature');
        const uploadSignature = document.getElementById('uploadSignature');
        const saveUploadedSignature = document.getElementById('saveUploadedSignature');
        const signatureColor = document.getElementById('signatureColor');
        const signatureSize = document.getElementById('signatureSize');
        const signerName = document.getElementById('signerName');
        const signerEmail = document.getElementById('signerEmail');
        const signingDate = document.getElementById('signingDate');
        const applySignatureBtn = document.getElementById('applySignature');
        const loadingSpinner = document.getElementById('loadingSpinner');
        const actionArea = document.getElementById('actionArea');
        const downloadPdf = document.getElementById('downloadPdf');
        const startOver = document.getElementById('startOver');
        const tabs = document.querySelectorAll('.tab');

        // State variables
        let pdfDoc = null;
        let currentPage = 1;
        let signaturePad = null;
        let savedSignature = null;
        let signatureType = 'draw';
        let selectedFont = 'Dancing Script';
        let pdfBytes = null;

        // Initialize the app
        function init() {
            // Set today's date
            const today = new Date();
            signingDate.value = today.toLocaleDateString();

            // Initialize signature pad
            signaturePad = new SignaturePad(signatureCanvas, {
                backgroundColor: 'rgba(255, 255, 255, 0)',
                penColor: 'black'
            });

            // Event listeners
            uploadArea.addEventListener('click', () => fileInput.click());
            uploadArea.addEventListener('dragover', handleDragOver);
            uploadArea.addEventListener('drop', handleFileDrop);
            fileInput.addEventListener('change', handleFileSelect);
            clearCanvas.addEventListener('click', () => signaturePad.clear());
            saveSignature.addEventListener('click', saveDrawnSignature);
            saveTypedSignature.addEventListener('click', saveTypedSignatureHandler);
            saveUploadedSignature.addEventListener('click', saveUploadedSignatureHandler);
            applySignatureBtn.addEventListener('click', applySignature);
            downloadPdf.addEventListener('click', downloadSignedPdf);
            startOver.addEventListener('click', resetApp);

            // Font selection
            fontOptions.forEach(option => {
                option.addEventListener('click', () => {
                    fontOptions.forEach(opt => opt.classList.remove('selected'));
                    option.classList.add('selected');
                    selectedFont = option.getAttribute('data-font');
                });
            });

            // Tab switching
            tabs.forEach(tab => {
                tab.addEventListener('click', () => {
                    tabs.forEach(t => t.classList.remove('active'));
                    tab.classList.add('active');
                    
                    document.querySelectorAll('.tab-content').forEach(content => {
                        content.classList.remove('active');
                    });
                    
                    document.getElementById(`${tab.getAttribute('data-tab')}-tab`).classList.add('active');
                    signatureType = tab.getAttribute('data-tab');
                });
            });
        }

        // Handle drag over event
        function handleDragOver(e) {
            e.preventDefault();
            e.stopPropagation();
            uploadArea.style.borderColor = '#4A90E2';
            uploadArea.style.backgroundColor = 'rgba(74, 144, 226, 0.05)';
        }

        // Handle file drop event
        function handleFileDrop(e) {
            e.preventDefault();
            e.stopPropagation();
            uploadArea.style.borderColor = '#E5E7EB';
            uploadArea.style.backgroundColor = 'white';
            
            const files = e.dataTransfer.files;
            if (files.length > 0 && files[0].type === 'application/pdf') {
                loadPdf(files[0]);
            } else {
                alert('Please drop a valid PDF file.');
            }
        }

        // Handle file selection
        function handleFileSelect(e) {
            const file = e.target.files[0];
            if (file && file.type === 'application/pdf') {
                loadPdf(file);
            } else {
                alert('Please select a valid PDF file.');
            }
        }

        // Load PDF and display first page
        async function loadPdf(file) {
            try {
                loadingSpinner.style.display = 'block';
                uploadArea.style.display = 'none';
                
                const arrayBuffer = await file.arrayBuffer();
                pdfBytes = new Uint8Array(arrayBuffer);
                
                // For demonstration purposes, we'll just show a placeholder
                // In a real implementation, you would use PDF.js to render the PDF
                const ctx = pdfCanvas.getContext('2d');
                ctx.fillStyle = '#f9f9f9';
                ctx.fillRect(0, 0, pdfCanvas.width, pdfCanvas.height);
                ctx.fillStyle = '#333';
                ctx.font = '20px Arial';
                ctx.textAlign = 'center';
                ctx.fillText('PDF Preview (Page 1)', pdfCanvas.width / 2, pdfCanvas.height / 2);
                ctx.font = '16px Arial';
                ctx.fillText('In a real implementation, PDF.js would render the actual PDF here', pdfCanvas.width / 2, pdfCanvas.height / 2 + 40);
                
                previewContainer.style.display = 'grid';
                loadingSpinner.style.display = 'none';
            } catch (error) {
                console.error('Error loading PDF:', error);
                alert('Error loading PDF. Please try again.');
                loadingSpinner.style.display = 'none';
                uploadArea.style.display = 'block';
            }
        }

        // Save drawn signature
        function saveDrawnSignature() {
            if (signaturePad.isEmpty()) {
                alert('Please draw your signature first.');
                return;
            }
            
            savedSignature = signaturePad.toDataURL();
            alert('Signature saved! Click "Apply Signature" to place it on the document.');
        }

        // Save typed signature
        function saveTypedSignatureHandler() {
            if (!typedSignature.value.trim()) {
                alert('Please type your name first.');
                return;
            }
            
            // In a real implementation, you would create a canvas and draw the text with the selected font
            savedSignature = 'typed'; // Placeholder
            alert('Signature saved! Click "Apply Signature" to place it on the document.');
        }

        // Save uploaded signature
        function saveUploadedSignatureHandler() {
            if (!uploadSignature.files.length) {
                alert('Please select an image file first.');
                return;
            }
            
            const file = uploadSignature.files[0];
            const reader = new FileReader();
            
            reader.onload = function(e) {
                savedSignature = e.target.result;
                alert('Signature saved! Click "Apply Signature" to place it on the document.');
            };
            
            reader.readAsDataURL(file);
        }

        // Apply signature to PDF
        async function applySignature() {
            if (!savedSignature) {
                alert('Please create and save a signature first.');
                return;
            }
            
            try {
                loadingSpinner.style.display = 'block';
                
                // In a real implementation, you would use pdf-lib to add the signature to the PDF
                // This is a simplified version for demonstration
                
                // Simulate processing delay
                await new Promise(resolve => setTimeout(resolve, 1500));
                
                previewContainer.style.display = 'none';
                loadingSpinner.style.display = 'none';
                actionArea.style.display = 'block';
            } catch (error) {
                console.error('Error applying signature:', error);
                alert('Error applying signature. Please try again.');
                loadingSpinner.style.display = 'none';
            }
        }

        // Download signed PDF
        function downloadSignedPdf() {
            if (!pdfBytes) {
                alert('No PDF available for download.');
                return;
            }
            
            // In a real implementation, you would use the modified PDF bytes
            // For demonstration, we'll create a simple download
            const blob = new Blob([pdfBytes], { type: 'application/pdf' });
            const url = URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = 'signed-document.pdf';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            URL.revokeObjectURL(url);
        }

        // Reset the app
        function resetApp() {
            uploadArea.style.display = 'block';
            previewContainer.style.display = 'none';
            actionArea.style.display = 'none';
            fileInput.value = '';
            signaturePad.clear();
            typedSignature.value = '';
            uploadSignature.value = '';
            signerName.value = '';
            signerEmail.value = '';
            savedSignature = null;
            pdfBytes = null;
        }

        // Initialize the application when the page loads
        document.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>
