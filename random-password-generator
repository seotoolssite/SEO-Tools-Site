<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Random Password Generator Tool</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-gradient: linear-gradient(90deg, #6A5ACD, #7B68EE);
            --accent-color: #4A90E2;
            --background-color: #F9FAFB;
            --text-primary: #333333;
            --text-secondary: #666666;
            --border-color: #E5E7EB;
            --card-bg: #FFFFFF;
            --shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
            --success-color: #4CAF50;
            --warning-color: #FF9800;
            --danger-color: #F44336;
        }

        .dark-theme {
            --background-color: #1a1a1a;
            --text-primary: #f5f5f5;
            --text-secondary: #b0b0b0;
            --border-color: #333333;
            --card-bg: #2d2d2d;
            --shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            transition: background-color 0.3s, color 0.3s;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: var(--background-color);
            color: var(--text-primary);
            line-height: 1.6;
            padding: 20px;
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
        }

        header {
            background: var(--primary-gradient);
            color: white;
            padding: 20px;
            border-radius: 16px 16px 0 0;
            position: relative;
            box-shadow: var(--shadow);
        }

        .back-btn {
            position: absolute;
            left: 20px;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            padding: 8px 16px;
            border-radius: 8px;
            font-size: 14px;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .back-btn:hover {
            background: rgba(255, 255, 255, 0.3);
        }

        header h1 {
            text-align: center;
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
        }

        header p {
            text-align: center;
            font-size: 14px;
            opacity: 0.9;
            max-width: 600px;
            margin: 0 auto;
        }

        .main-content {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-top: 20px;
        }

        .generator-card {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 24px;
            box-shadow: var(--shadow);
            flex: 1;
            min-width: 300px;
        }

        .password-output {
            display: flex;
            margin-bottom: 24px;
            position: relative;
        }

        .password-field {
            flex: 1;
            padding: 16px;
            border: 1px solid var(--border-color);
            border-radius: 12px 0 0 12px;
            font-size: 18px;
            font-family: monospace;
            background-color: var(--card-bg);
            color: var(--text-primary);
        }

        .copy-btn {
            background: var(--accent-color);
            color: white;
            border: none;
            border-radius: 0 12px 12px 0;
            padding: 0 20px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .copy-btn:hover {
            background: #3a7bc8;
        }

        .copy-message {
            position: absolute;
            bottom: -30px;
            left: 0;
            color: var(--success-color);
            font-size: 14px;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .copy-message.show {
            opacity: 1;
        }

        .options-section h3 {
            margin-bottom: 16px;
            font-weight: 600;
            color: var(--text-primary);
        }

        .option-group {
            margin-bottom: 20px;
        }

        .option-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: var(--text-secondary);
        }

        .length-slider {
            width: 100%;
            margin: 10px 0;
        }

        .length-value {
            text-align: center;
            font-weight: 600;
            color: var(--accent-color);
            margin-bottom: 10px;
        }

        .checkbox-group {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
            margin-bottom: 20px;
        }

        .checkbox-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .checkbox-item input {
            width: 18px;
            height: 18px;
        }

        .generate-btn {
            width: 100%;
            padding: 16px;
            background: var(--accent-color);
            color: white;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            margin-bottom: 20px;
            transition: all 0.3s;
        }

        .generate-btn:hover {
            background: #3a7bc8;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .strength-indicator {
            margin-top: 20px;
        }

        .strength-label {
            display: flex;
            justify-content: space-between;
            margin-bottom: 8px;
        }

        .strength-bar {
            height: 8px;
            background: var(--border-color);
            border-radius: 4px;
            overflow: hidden;
        }

        .strength-fill {
            height: 100%;
            width: 0%;
            transition: width 0.3s, background-color 0.3s;
        }

        .strength-text {
            font-size: 14px;
            margin-top: 8px;
            text-align: right;
            font-weight: 500;
        }

        .sidebar {
            background: var(--card-bg);
            border-radius: 16px;
            padding: 24px;
            box-shadow: var(--shadow);
            flex: 0 0 300px;
        }

        .sidebar h3 {
            margin-bottom: 16px;
            font-weight: 600;
            color: var(--text-primary);
        }

        .tip-item {
            display: flex;
            align-items: flex-start;
            gap: 12px;
            margin-bottom: 16px;
        }

        .tip-icon {
            width: 24px;
            height: 24px;
            background: var(--accent-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 12px;
            flex-shrink: 0;
        }

        .tip-content h4 {
            font-size: 14px;
            margin-bottom: 4px;
            color: var(--text-primary);
        }

        .tip-content p {
            font-size: 13px;
            color: var(--text-secondary);
        }

        .theme-toggle {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--card-bg);
            border: 1px solid var(--border-color);
            border-radius: 50%;
            width: 50px;
            height: 50px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            box-shadow: var(--shadow);
        }

        .theme-toggle:hover {
            transform: scale(1.05);
        }

        footer {
            text-align: center;
            margin-top: 30px;
            color: var(--text-secondary);
            font-size: 14px;
        }

        @media (max-width: 768px) {
            .main-content {
                flex-direction: column;
            }
            
            .sidebar {
                flex: 1;
            }
            
            .checkbox-group {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <button class="back-btn">← Back to Main Page</button>
            <h1>Random Password Generator</h1>
            <p>Generate Strong, Secure, and Unique Passwords Instantly — Free Online Random Password Generator.</p>
        </header>
        
        <div class="main-content">
            <div class="generator-card">
                <div class="password-output">
                    <input type="text" id="password-field" class="password-field" readonly placeholder="Your password will appear here">
                    <button id="copy-btn" class="copy-btn">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                        </svg>
                    </button>
                    <span class="copy-message" id="copy-message">Password copied!</span>
                </div>
                
                <div class="options-section">
                    <h3>Customize your password</h3>
                    
                    <div class="option-group">
                        <label class="option-label">Password Length: <span id="length-value" class="length-value">12</span></label>
                        <input type="range" id="length-slider" class="length-slider" min="6" max="50" value="12">
                    </div>
                    
                    <div class="checkbox-group">
                        <div class="checkbox-item">
                            <input type="checkbox" id="uppercase" checked>
                            <label for="uppercase">Uppercase Letters (A-Z)</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="lowercase" checked>
                            <label for="lowercase">Lowercase Letters (a-z)</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="numbers" checked>
                            <label for="numbers">Numbers (0-9)</label>
                        </div>
                        <div class="checkbox-item">
                            <input type="checkbox" id="symbols" checked>
                            <label for="symbols">Symbols (!@#$%^&*)</label>
                        </div>
                    </div>
                    
                    <button id="generate-btn" class="generate-btn">Generate Password</button>
                    
                    <div class="strength-indicator">
                        <div class="strength-label">
                            <span>Password Strength:</span>
                            <span id="strength-text">Medium</span>
                        </div>
                        <div class="strength-bar">
                            <div id="strength-fill" class="strength-fill"></div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="sidebar">
                <h3>Tips for Strong Passwords</h3>
                
                <div class="tip-item">
                    <div class="tip-icon">1</div>
                    <div class="tip-content">
                        <h4>Use a Mix of Characters</h4>
                        <p>Combine uppercase, lowercase, numbers, and symbols for maximum security.</p>
                    </div>
                </div>
                
                <div class="tip-item">
                    <div class="tip-icon">2</div>
                    <div class="tip-content">
                        <h4>Make it Long</h4>
                        <p>Aim for at least 12 characters. Longer passwords are harder to crack.</p>
                    </div>
                </div>
                
                <div class="tip-item">
                    <div class="tip-icon">3</div>
                    <div class="tip-content">
                        <h4>Avoid Personal Information</h4>
                        <p>Don't use names, birthdays, or common words that are easy to guess.</p>
                    </div>
                </div>
                
                <div class="tip-item">
                    <div class="tip-icon">4</div>
                    <div class="tip-content">
                        <h4>Use Unique Passwords</h4>
                        <p>Never reuse passwords across different accounts or services.</p>
                    </div>
                </div>
            </div>
        </div>
        
        <footer>
            Made with ❤️ by seotools.site
        </footer>
    </div>
    
    <div class="theme-toggle" id="theme-toggle">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <circle cx="12" cy="12" r="5"></circle>
            <line x1="12" y1="1" x2="12" y2="3"></line>
            <line x1="12" y1="21" x2="12" y2="23"></line>
            <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line>
            <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line>
            <line x1="1" y1="12" x2="3" y2="12"></line>
            <line x1="21" y1="12" x2="23" y2="12"></line>
            <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line>
            <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>
        </svg>
    </div>

    <script>
        // DOM Elements
        const passwordField = document.getElementById('password-field');
        const copyBtn = document.getElementById('copy-btn');
        const copyMessage = document.getElementById('copy-message');
        const lengthSlider = document.getElementById('length-slider');
        const lengthValue = document.getElementById('length-value');
        const uppercaseCheckbox = document.getElementById('uppercase');
        const lowercaseCheckbox = document.getElementById('lowercase');
        const numbersCheckbox = document.getElementById('numbers');
        const symbolsCheckbox = document.getElementById('symbols');
        const generateBtn = document.getElementById('generate-btn');
        const strengthFill = document.getElementById('strength-fill');
        const strengthText = document.getElementById('strength-text');
        const themeToggle = document.getElementById('theme-toggle');

        // Character sets
        const uppercaseChars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        const lowercaseChars = 'abcdefghijklmnopqrstuvwxyz';
        const numberChars = '0123456789';
        const symbolChars = '!@#$%^&*()_+-=[]{}|;:,.<>?';

        // Initialize with a generated password
        window.addEventListener('DOMContentLoaded', () => {
            generatePassword();
        });

        // Update length value display
        lengthSlider.addEventListener('input', () => {
            lengthValue.textContent = lengthSlider.value;
            generatePassword();
        });

        // Generate password when options change
        [uppercaseCheckbox, lowercaseCheckbox, numbersCheckbox, symbolsCheckbox].forEach(checkbox => {
            checkbox.addEventListener('change', generatePassword);
        });

        // Generate password button
        generateBtn.addEventListener('click', generatePassword);

        // Copy to clipboard
        copyBtn.addEventListener('click', () => {
            if (passwordField.value) {
                navigator.clipboard.writeText(passwordField.value)
                    .then(() => {
                        copyMessage.classList.add('show');
                        setTimeout(() => {
                            copyMessage.classList.remove('show');
                        }, 2000);
                    })
                    .catch(err => {
                        console.error('Failed to copy: ', err);
                    });
            }
        });

        // Theme toggle
        themeToggle.addEventListener('click', () => {
            document.body.classList.toggle('dark-theme');
        });

        // Password generation function
        function generatePassword() {
            let length = parseInt(lengthSlider.value);
            let charSet = '';
            let password = '';
            
            // Build character set based on selected options
            if (uppercaseCheckbox.checked) charSet += uppercaseChars;
            if (lowercaseCheckbox.checked) charSet += lowercaseChars;
            if (numbersCheckbox.checked) charSet += numberChars;
            if (symbolsCheckbox.checked) charSet += symbolChars;
            
            // If no character types selected, use all
            if (charSet === '') {
                charSet = uppercaseChars + lowercaseChars + numberChars + symbolChars;
                uppercaseCheckbox.checked = true;
                lowercaseCheckbox.checked = true;
                numbersCheckbox.checked = true;
                symbolsCheckbox.checked = true;
            }
            
            // Generate password using cryptographically secure random values
            const array = new Uint32Array(length);
            window.crypto.getRandomValues(array);
            
            for (let i = 0; i < length; i++) {
                password += charSet[array[i] % charSet.length];
            }
            
            passwordField.value = password;
            updateStrengthIndicator(password);
        }

        // Update password strength indicator
        function updateStrengthIndicator(password) {
            let strength = 0;
            let feedback = '';
            
            // Length check
            if (password.length >= 12) strength += 2;
            else if (password.length >= 8) strength += 1;
            
            // Character variety checks
            if (/[A-Z]/.test(password)) strength += 1;
            if (/[a-z]/.test(password)) strength += 1;
            if (/[0-9]/.test(password)) strength += 1;
            if (/[^A-Za-z0-9]/.test(password)) strength += 1;
            
            // Determine strength level
            let strengthLevel, strengthColor;
            if (strength <= 2) {
                strengthLevel = 'Weak';
                strengthColor = 'var(--danger-color)';
            } else if (strength <= 4) {
                strengthLevel = 'Medium';
                strengthColor = 'var(--warning-color)';
            } else {
                strengthLevel = 'Strong';
                strengthColor = 'var(--success-color)';
            }
            
            // Update UI
            strengthFill.style.width = `${(strength / 6) * 100}%`;
            strengthFill.style.backgroundColor = strengthColor;
            strengthText.textContent = strengthLevel;
            strengthText.style.color = strengthColor;
        }
    </script>
</body>
</html>
